image: nberlette/gitpod-enhanced

tasks:
  - name: "Deno"
    env:
      DENO_INSTALL: /home/gitpod/.deno
    init: >- # run on prebuilds only
      cd "$GITPOD_REPO_ROOT" || exit $?

      # if deno binary exists in path, ensure that it is not from homebrew
      command -v deno 2>/dev/null | grep -q "linuxbrew" &&
        brew uninstall deno &>/dev/null;

      # ensure the deno install dir exists
      [ ! -d "$DENO_INSTALL" ] && mkdir -p "$DENO_INSTALL" &>/dev/null;
      if ! echo -n "$PATH" | grep -q "$DENO_INSTALL/bin"; then
        export PATH="${DENO_INSTALL:+$DENO_INSTALL/bin:}${PATH-}"
      fi

      if ! which deno &>/dev/null; then
        echo 'export PATH="'$DENO_INSTALL'/bin:${PATH-}"' >> ~/.bashrc
        # download and install the latest release from deno.land
        curl -fsSL https://deno.land/install.sh | sh -
      fi

      # ensure deno.lock is ignored
      grep -q "deno.lock" "${GITPOD_REPO_ROOT:-.}/.gitignore" ||
        echo -e $'\ndeno.lock\n' >> "${GITPOD_REPO_ROOT:-.}/.gitignore";

      exit 0 #all is well, proceed with the task
    before: >- # run before every startup
      # upgrade to latest deno canary plz
      deno upgrade --canary --unstable 2>/dev/null

      # re-cache our dependency files
      for _f in ./**/deps.* ./deps.* ./import{-,_,}map.*; do
        [ -f "$_f" ] && deno cache --reload "$_f" --lock-write 2>&1
      done

      exit 0 #all is well, proceed with to command
    command: deno task >&2

ports:
  - name: "Dev (private)"
    port: 8000-8888
    visibility: private
    onOpen: open-preview

github:
  prebuilds:
    branches: true
    pullRequests: true
    # custom label to add to a PR
    addLabel: "gitpod-prebuild"
    # enable prebuilds for pull requests coming from forks
    pullRequestsFromForks: true
    # adds a check to prevent merging PR's if the prebuild fails
    addCheck: "prevent-merge-on-error"

gitConfig:
  core.autocrlf: "false"
  core.eol: lf
  tag.gpgsign: "true"
  commit.gpgsign: "true"
  core.hooksPath: ".github/hooks"
  hooks.silent: "false"
  hooks.debug: "false"
  hooks.commit.test: "deno test -A --unstable --no-check 2>&1"
  hooks.commit.fmt: "deno fmt"
  hooks.commit.lint: "false"
  hooks.commit.message.enabled: "false"

vscode:
  extensions:
    - denoland.vscode-deno
    - umbo.vscode-velociraptor
    - Thinker.deno-standard-lib-snippets
    - editorconfig.editorconfig
    - quicktype.quicktype
    - skarab42.ts-to-md
    - yzhang.markdown-all-in-one
    - bierner.markdown-preview-github-styles
    - vsls-contrib.gistfs
    - gitpod.gitpod-desktop
    - gitpod.gitpod-remote-ssh
    - github.copilot-nightly
    - github.copilot-labs
    - antfu.iconify
    - antfu.unocss
    - jock.svg
